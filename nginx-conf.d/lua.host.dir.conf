resolver 127.0.0.11;
# resolver 127.0.0.11 223.5.5.5;

# /etc/nginx/conf.d/lua.host.dir.conf

log_format main 'nginx-log-access $remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$host" "$upstream_addr"';

access_log  logs/access.log  main;

# thinkphp专用
server{

    server_name ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))?\.my\.dev$  
    ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
    ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
    ;
    listen 80;


    # 多级域名对应多级目录
    set_by_lua $host_dir_path '
        return string.gsub(ngx.var.host_path, "%.", "/");
    ';
    
    root /app/$host_dir_path/public;
    index index.html index.htm index.php;

    
    # 对接php和日志
    include /opt/docker/etc/nginx/vhost.common.d/*.conf;

    include /opt/docker/etc/nginx/vhost.framework.d/11-location-thinkphp.conf;
    
    # include不支持变量
    # 覆盖location /可用location ~ ^/
    # include /app/$host_dir_path/*nginx.htaccess;

}


server{

    server_name ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5_root(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))?\.my\.dev$  
    ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5_root(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
    ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5_root\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
    ;
    listen 80;


    # 多级域名对应多级目录
    set_by_lua $host_dir_path '
        return string.gsub(ngx.var.host_path, "%.", "/");
    ';
    
    # 根目录模式
    root /app/$host_dir_path;
    index index.html index.htm index.php;

    
    # 对接php和日志
    include /opt/docker/etc/nginx/vhost.common.d/*.conf;

    include /opt/docker/etc/nginx/vhost.framework.d/11-location-thinkphp5.conf;
    
    # include不支持变量
    # 覆盖location /可用location ~ ^/
    # include /app/$host_dir_path/*nginx.htaccess;

}

server{

    server_name ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))?\.my\.dev$  

        ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
        ~^(.*\.path\.)?(?P<host_path>.*)\.thinkphp5\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
    ;
    listen 80;


    # 多级域名对应多级目录
    set_by_lua $host_dir_path '
        return string.gsub(ngx.var.host_path, "%.", "/");
    ';
    
    root /app/$host_dir_path/public;
    index index.html index.htm index.php;

    
    # 对接php和日志
    include /opt/docker/etc/nginx/vhost.common.d/*.conf;

    include /opt/docker/etc/nginx/vhost.framework.d/11-location-thinkphp5.conf;
    
    # include不支持变量
    # 覆盖location /可用location ~ ^/
    # include /app/$host_dir_path/*nginx.htaccess;

}

# --------------------yii--------------------
# 判断第一个路径是否存在，存在就使用否则用跟目录index.php
server{

    server_name ~^(.*\.path\.)?(?P<host_path>.*)\.yii(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))?\.my\.dev$ 
        ~^(.*\.path\.)?(?P<host_path>.*)\.yii(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
        ~^(.*\.path\.)?(?P<host_path>.*)\.yii\.((?P<container_name>.*)\.proxy_sslip\.)?\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
     ;
    listen 80;


    # 多级域名对应多级目录
    set_by_lua $host_dir_path '
        return string.gsub(ngx.var.host_path, "%.", "/");
    ';
    
    root /app/$host_dir_path;
    index index.html index.htm index.php;

    
    # 对接php和日志
    #include /opt/docker/etc/nginx/vhost.common.d/*.conf;
    include /opt/docker/etc/nginx/vhost.common.d/02-*.conf;
    include /opt/docker/etc/nginx/vhost.common.d/10-general.conf;
    include /opt/docker/etc/nginx/vhost.common.d/10-log.conf;
    include /opt/docker/etc/nginx/vhost.common.d/13-php-var.conf;

    
    location ~ ^/(?P<first_dir>[^/]*) { 
       if ( !-d /app/$host_dir_path/$first_dir ){
           error_page 404 = /index.php$is_args$args;
       }
    
       try_files $uri $uri/ /$first_dir/index.php$is_args$args;
    }

    # include /opt/docker/etc/nginx/vhost.framework.d/11-location-thinkphp.conf;
    
    # include不支持变量
    # 覆盖location /可用location ~ ^/
    # include /app/$host_dir_path/*nginx.htaccess;

}
# --------------------yii--------------------



# 无特定框架，最后匹配--------------------------


# 容器内
# curl test.php_port.localhost.9000.localhost.proxy_sslip.127.0.0.1.sslip.io/server.php
# curl test.php_port.127.0.0.1.9000.localhost.proxy_sslip.127.0.0.1.sslip.io/server.php

# server{

#     server_name ~^(.*\.path\.)?(?P<host_path>.*)\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+)\.(?P<container_name>.*)\.proxy_sslip\.\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$;
#     listen 80;



#     # 多级域名对应多级目录
#     set_by_lua $host_dir_path '
#         return string.gsub(ngx.var.host_path, "%.", "/");
#     ';
    
#     root /app/$host_dir_path;
#     index index.html index.htm index.php;
    
#     # 对接php和日志
#     include /opt/docker/etc/nginx/vhost.common.d/02-*.conf;
#     include /opt/docker/etc/nginx/vhost.common.d/10-*.conf;

#     location ~ \.php$ {
#         fastcgi_split_path_info ^(.+\.php)(/.+)$;
#         fastcgi_pass $php_host:$php_port;
#         include fastcgi_params;
        
        
#         fastcgi_param SERVER_NAME     $host;
        
#         fastcgi_param SCRIPT_FILENAME     $request_filename;
#         fastcgi_read_timeout 600;
#     }

#     # include不支持变量
#     # 覆盖location /可用location ~ ^/
#     # include /app/$host_dir_path/*nginx.htaccess;

# }


# 可以双引号包裹正则
# 从左到右的匹配优先级，如果左边单项能满足就忽略?



server{

    server_name ~^(.*\.path\.)?(?P<host_path>.*)(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))?\.my\.dev$
        ~^(.*\.path\.)?(?P<host_path>.*)(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.(?P<container_name>.*)\.proxy_sslip\.\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
        ~^(.*\.path\.)?(?P<host_path>.*)\.(?P<container_name>.*)\.proxy_sslip\.\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$

        ~^(.*\.path\.)?(?P<host_path>.*)(\.php_port\.(?P<php_host>.*)\.(?P<php_port>\d+))\.\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
        ~^(.*\.path\.)?(?P<host_path>.*)\.\d+\.\d+\.\d+\.\d+\.(xip|sslip)\.io$
;

    listen 80;


        # echo "php_host: $php_host\n";
        # echo "php_port: $php_port\n";

    # 多级域名对应多级目录
    set_by_lua $host_dir_path '
        return string.gsub(ngx.var.host_path, "%.", "/");
    ';
    
    root /app/$host_dir_path;
    index index.html index.htm index.php;
    
    # 对接php和日志
    include /opt/docker/etc/nginx/vhost.common.d/*.conf;

    # include不支持变量
    # 覆盖location /可用location ~ ^/
    # include /app/$host_dir_path/*nginx.htaccess;

}

# 无特定框架，最后匹配--------------------------
